https://www.hackerrank.com/challenges/big-sorting/problem

#include <iostream>
#include <vector>
#include <string>
#include <algorithm>

bool pred(std::string i, std::string j)
{
    return i.length() == j.length() ? i < j : i.length() < j.length();
}

int main()
{
    int n;
    std::cin >> n;
    std::vector<std::string> vec(n);
    for (auto& element : vec)    std::cin >> element;

    std::sort(vec.begin(), vec.end(), pred);

    for (auto n : vec) std::cout << n << std::endl;
}



OR

#include <iostream>
#include <vector>
#include <algorithm>
#include <functional>
#include <string>

int main()
{
	int n{};
	std::cin >> n;
	std::vector<std::string> vec(n);
	for (std::string& element : vec) std::cin >> element;

	static const auto compare = [](const std::string& now, const std::string& next) noexcept ->bool 
	{
		return now.size() == next.size() ? now < next : now.size() < next.size();
	};

	std::sort(vec.begin(), vec.end(), std::cref(compare));
	for (const std::string& element : vec)
		std::cout << element << '\n';
}
